<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Grafana on 467 notes</title>
    <link>https://srn221B.github.io/tags/grafana/</link>
    <description>Recent content in Grafana on 467 notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Jan 2021 20:54:56 +0900</lastBuildDate>
    
	<atom:link href="https://srn221B.github.io/tags/grafana/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerを使ったGrafanaのDatasourceとDashboardの起動時追加方法</title>
      <link>https://srn221B.github.io/content4/</link>
      <pubDate>Sun, 17 Jan 2021 20:54:56 +0900</pubDate>
      
      <guid>https://srn221B.github.io/content4/</guid>
      <description>こんにちは ブログ書くの久々すぎて書き方忘れた。。。うそです。
去年の卒研終わったあたりから作り始めたこのサイトですが、あまりにも初期状態すぎたので、重い腰をあげて「HugoのthemaをBeautifulHugoからCupperに変更」「repositoryを整理」の２点をしました。一新したのでブログ書くモチベもこれで上がるはず（？）仕事もだいぶ慣れてきたので2022年は些細なことでももう少し書いていきたいな。。。
タイトル通り 「Dockerを使ったGrafanaのDatasourceとDashboardの起動時追加方法」のメモを簡単に備忘録としてまとめておきます。
Datasourceの起動時追加 Dashboardの起動時追加を設定する前に、まずはこっちを作っていきます。
構成 . ├── docker-compose.yml ├── flask │ ├── Dockerfile │ └── app │ └── app.py ├── grafana │ ├── Dockerfile │ └── datasource.yml └── prometheus.yml  ここでは grafanaで可視化するサーバーはprometheusで、prometheusでの監視はflaskを用いた自作exporterとしています。
flask/Dockerfile FROM ubuntu:latest RUN apt-get update RUN apt-get install python3 python3-pip -y RUN pip3 install flask prometheus-client RUN mkdir /app  flask/app.py pythonのPrometheusClientライブラリを使ってexporter化しましした。testしやすいようにcurl http://localhost:3000/hogeでGauge型のmetricsが増減するexporterです。
from flask import Flask,render_template,request import json import queue from werkzeug.middleware.dispatcher import DispatcherMiddleware from prometheus_client import make_wsgi_app,Gauge app = Flask(__name__) G1 = Gauge(&#39;Gauge1&#39;,&#39;Gauge test&#39;) G2 = Gauge(&#39;Gauge2&#39;,&#39;Gauge test&#39;) @app.</description>
    </item>
    
  </channel>
</rss>